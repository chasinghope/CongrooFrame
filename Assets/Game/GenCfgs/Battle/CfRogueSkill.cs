
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.Battle
{
public sealed partial class CfRogueSkill : Luban.BeanBase
{
    public CfRogueSkill(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);PreSkills = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); PreSkills.Add(_e0);}}
        IsUseBattle = _buf.ReadBool();
        IsInPool = _buf.ReadBool();
        Type = _buf.ReadString();
        Param1 = _buf.ReadString();
        Param2 = _buf.ReadString();
        Param3 = _buf.ReadString();
        Param4 = _buf.ReadString();
        Param5 = _buf.ReadString();
        Desc = _buf.ReadString();
        CanStack = _buf.ReadBool();
        Quality = _buf.ReadInt();
        Importance = _buf.ReadInt();
        Pct = _buf.ReadInt();
        Name = _buf.ReadInt();
        IconPath = _buf.ReadString();
    }

    public static CfRogueSkill DeserializeCfRogueSkill(ByteBuf _buf)
    {
        return new Battle.CfRogueSkill(_buf);
    }

    /// <summary>
    /// 肉鸽技能id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 前置技能
    /// </summary>
    public readonly System.Collections.Generic.List<int> PreSkills;
    /// <summary>
    /// 仅作用于战斗回合
    /// </summary>
    public readonly bool IsUseBattle;
    /// <summary>
    /// 是否在技能池
    /// </summary>
    public readonly bool IsInPool;
    /// <summary>
    /// 技能类型
    /// </summary>
    public readonly string Type;
    /// <summary>
    /// 参数1
    /// </summary>
    public readonly string Param1;
    /// <summary>
    /// 参数2
    /// </summary>
    public readonly string Param2;
    /// <summary>
    /// 参数3
    /// </summary>
    public readonly string Param3;
    /// <summary>
    /// 参数4
    /// </summary>
    public readonly string Param4;
    /// <summary>
    /// 参数5
    /// </summary>
    public readonly string Param5;
    /// <summary>
    /// 详情
    /// </summary>
    public readonly string Desc;
    /// <summary>
    /// 是否可叠加
    /// </summary>
    public readonly bool CanStack;
    /// <summary>
    /// 品质
    /// </summary>
    public readonly int Quality;
    /// <summary>
    /// 重要度
    /// </summary>
    public readonly int Importance;
    /// <summary>
    /// 概率
    /// </summary>
    public readonly int Pct;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly int Name;
    /// <summary>
    /// 图片路径
    /// </summary>
    public readonly string IconPath;
   
    public const int __ID__ = -1365188912;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "PreSkills:" + Luban.StringUtil.CollectionToString(PreSkills) + ","
        + "IsUseBattle:" + IsUseBattle + ","
        + "IsInPool:" + IsInPool + ","
        + "Type:" + Type + ","
        + "Param1:" + Param1 + ","
        + "Param2:" + Param2 + ","
        + "Param3:" + Param3 + ","
        + "Param4:" + Param4 + ","
        + "Param5:" + Param5 + ","
        + "Desc:" + Desc + ","
        + "CanStack:" + CanStack + ","
        + "Quality:" + Quality + ","
        + "Importance:" + Importance + ","
        + "Pct:" + Pct + ","
        + "Name:" + Name + ","
        + "IconPath:" + IconPath + ","
        + "}";
    }
}

}

