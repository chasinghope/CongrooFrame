
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.Battle
{
public sealed partial class CfGoods : Luban.BeanBase
{
    public CfGoods(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["ItemName"].IsNumber) { throw new SerializationException(); }  ItemName = _buf["ItemName"]; }
        { if(!_buf["ItemType"].IsNumber) { throw new SerializationException(); }  ItemType = (Bag.ItemGoodsType)_buf["ItemType"].AsInt; }
        { if(!_buf["IsInPackage"].IsBoolean) { throw new SerializationException(); }  IsInPackage = _buf["IsInPackage"]; }
        { if(!_buf["ItemMaterialType"].IsNumber) { throw new SerializationException(); }  ItemMaterialType = (Bag.ItemMateralType)_buf["ItemMaterialType"].AsInt; }
        { if(!_buf["ItemParams"].IsNumber) { throw new SerializationException(); }  ItemParams = _buf["ItemParams"]; }
        { var __json0 = _buf["ItemRewards"]; if(!__json0.IsArray) { throw new SerializationException(); } ItemRewards = new System.Collections.Generic.List<Com.ItemRewards>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { Com.ItemRewards __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = Com.ItemRewards.DeserializeItemRewards(__e0);  }  ItemRewards.Add(__v0); }   }
        { if(!_buf["ItemDescription"].IsNumber) { throw new SerializationException(); }  ItemDescription = _buf["ItemDescription"]; }
        { if(!_buf["ItemQuality"].IsNumber) { throw new SerializationException(); }  ItemQuality = _buf["ItemQuality"]; }
        { var __json0 = _buf["ItemCollect"]; if(!__json0.IsArray) { throw new SerializationException(); } ItemCollect = new System.Collections.Generic.List<Common.TargetPage>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { Common.TargetPage __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = (Common.TargetPage)__e0.AsInt; }  ItemCollect.Add(__v0); }   }
    }

    public static CfGoods DeserializeCfGoods(JSONNode _buf)
    {
        return new Battle.CfGoods(_buf);
    }

    /// <summary>
    /// 道具等级ID
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 道具名称
    /// </summary>
    public readonly int ItemName;
    /// <summary>
    /// 道具类型
    /// </summary>
    public readonly Bag.ItemGoodsType ItemType;
    /// <summary>
    /// 是否在包裹
    /// </summary>
    public readonly bool IsInPackage;
    /// <summary>
    /// 材料类型
    /// </summary>
    public readonly Bag.ItemMateralType ItemMaterialType;
    /// <summary>
    /// 道具参数:材料(1随机) 宝箱:(1随机 2自选)  武器碎片:(武器id)
    /// </summary>
    public readonly int ItemParams;
    /// <summary>
    /// 道具奖励
    /// </summary>
    public readonly System.Collections.Generic.List<Com.ItemRewards> ItemRewards;
    /// <summary>
    /// 道具描述
    /// </summary>
    public readonly int ItemDescription;
    /// <summary>
    /// 道具品质
    /// </summary>
    public readonly int ItemQuality;
    /// <summary>
    /// 来源
    /// </summary>
    public readonly System.Collections.Generic.List<Common.TargetPage> ItemCollect;
   
    public const int __ID__ = 1372679549;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        foreach (var _e in ItemRewards) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "ItemName:" + ItemName + ","
        + "ItemType:" + ItemType + ","
        + "IsInPackage:" + IsInPackage + ","
        + "ItemMaterialType:" + ItemMaterialType + ","
        + "ItemParams:" + ItemParams + ","
        + "ItemRewards:" + Luban.StringUtil.CollectionToString(ItemRewards) + ","
        + "ItemDescription:" + ItemDescription + ","
        + "ItemQuality:" + ItemQuality + ","
        + "ItemCollect:" + Luban.StringUtil.CollectionToString(ItemCollect) + ","
        + "}";
    }
}

}

